package com.rns.healthplease.web.dao.domain;

// Generated 1 May, 2016 3:04:07 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

/**
 * AppointmentTests generated by hbm2java
 */
@Entity
@Table(name = "appointment_tests")
public class AppointmentTests implements java.io.Serializable {

	private Integer id;
	//private int appointmentId;
	private Appointments appointments;
	//private int testId;
	private Tests tests;
	private AppFileLocations fileLocation;
	private String reportSent;
	private String remark;
	//private Date reportDate;

	public AppointmentTests() {
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	/*@Column(name = "appointment_id", nullable = false)
	public int getAppointmentId() {
		return this.appointmentId;
	}

	public void setAppointmentId(int appointmentId) {
		this.appointmentId = appointmentId;
	}*/

	/*@Column(name = "test_id", nullable = false)
	public int getTestId() {
		return this.testId;
	}

	public void setTestId(int testId) {
		this.testId = testId;
	}*/

	@ManyToOne(cascade = CascadeType.MERGE)
	@NotFound(action = NotFoundAction.IGNORE)
    @JoinColumn(name = "file_location_id")
	public AppFileLocations getFileLocation() {
		return fileLocation;
	}

	public void setFileLocation(AppFileLocations fileLocation) {
		this.fileLocation = fileLocation;
	}

	@ManyToOne(cascade = CascadeType.MERGE)
    @JoinColumn(name = "appointment_id")
	public Appointments getAppointments() {
		return appointments;
	}


	public void setAppointments(Appointments appointments) {
		this.appointments = appointments;
	}

	@ManyToOne(cascade = CascadeType.MERGE)
	@NotFound(action = NotFoundAction.IGNORE)
    @JoinColumn(name = "test_id")
	public Tests getTests() {
		return tests;
	}


	public void setTests(Tests tests) {
		this.tests = tests;
	}

	@Column(name = "report_sent")
	public String getReportSent() {
		return reportSent;
	}


	public void setReportSent(String reportSent) {
		this.reportSent = reportSent;
	}


	@Column(name = "remark")
	public String getRemark() {
		return remark;
	}


	public void setRemark(String remark) {
		this.remark = remark;
	}


	/*@Column(name = "report_date")
	public Date getReportDate() {
		return reportDate;
	}


	public void setReportDate(Date reportDate) {
		this.reportDate = reportDate;
	}*/

}
