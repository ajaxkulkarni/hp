package com.rns.healthplease.web.dao.domain;

// Generated 1 May, 2016 3:04:07 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * RequestCollections generated by hbm2java
 */
@Entity
@Table(name = "request_collections")
public class RequestCollections implements java.io.Serializable {

	private Integer id;
	private String name;
	private String email;
	private short age;
	private String contactNo;
	private String query;
	private short requestedFor;
	private String remark;
	private String isProcessed;
	private Date createdTime;
	private Date updatedTime;

	public RequestCollections() {
	}

	public RequestCollections(String name, String email, short age, String contactNo, String query, short requestedFor, String remark, String isProcessed, Date createdTime) {
		this.name = name;
		this.email = email;
		this.age = age;
		this.contactNo = contactNo;
		this.query = query;
		this.requestedFor = requestedFor;
		this.remark = remark;
		this.isProcessed = isProcessed;
		this.createdTime = createdTime;
	}

	public RequestCollections(String name, String email, short age, String contactNo, String query, short requestedFor, String remark, String isProcessed, Date createdTime,
			Date updatedTime) {
		this.name = name;
		this.email = email;
		this.age = age;
		this.contactNo = contactNo;
		this.query = query;
		this.requestedFor = requestedFor;
		this.remark = remark;
		this.isProcessed = isProcessed;
		this.createdTime = createdTime;
		this.updatedTime = updatedTime;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email", nullable = false, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "age", nullable = false)
	public short getAge() {
		return this.age;
	}

	public void setAge(short age) {
		this.age = age;
	}

	@Column(name = "contact_no", nullable = false, length = 15)
	public String getContactNo() {
		return this.contactNo;
	}

	public void setContactNo(String contactNo) {
		this.contactNo = contactNo;
	}

	@Column(name = "query", nullable = false, length = 500)
	public String getQuery() {
		return this.query;
	}

	public void setQuery(String query) {
		this.query = query;
	}

	@Column(name = "requested_for", nullable = false)
	public short getRequestedFor() {
		return this.requestedFor;
	}

	public void setRequestedFor(short requestedFor) {
		this.requestedFor = requestedFor;
	}

	@Column(name = "remark", nullable = false, length = 500)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@Column(name = "is_processed", nullable = false, length = 2)
	public String getIsProcessed() {
		return this.isProcessed;
	}

	public void setIsProcessed(String isProcessed) {
		this.isProcessed = isProcessed;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time", nullable = false, length = 19)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_time", length = 19)
	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

}
